/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package querybuilder;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import querybuilder.subquery.SubDeleteQuery;
import querybuilder.subquery.SubInsertQuery2;
import querybuilder.subquery.SubSelectQuery2;
import querybuilder.subquery.SubUpdateQuery2;

/**
 *
 * @author vikas
 */
public class QBPanel extends javax.swing.JFrame {

    private static Connection conn;

    /**
     * @return the conn
     */
    public static Connection getConn() {
        return conn;
    }

    /**
     * @param aConn the conn to set
     */
    public static void setConn(Connection aConn) {
        conn = aConn;
    }
    private ResultSet rs;
    private PreparedStatement pstmt,pstmt_schema_tree,pstmt_table_tree,pstmt_field_tree;
    private int pos=-1;
    private String query;
    public QBPanel() {
        initComponents();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/vikas", "root", "root");
            treeCreator();
            setLocationRelativeTo(null);
            setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\vikas\\Documents\\NetBeansProjects\\QueryBuilder\\src\\Image\\icon.png"));
            //QueryPane.setText();
        } 
        catch (Exception e) 
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        dropTable = new javax.swing.JMenuItem();
        Refresh = new javax.swing.JMenuItem();
        create_schema = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        jpan1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        QueryPane1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        treePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        select = new javax.swing.JMenuItem();
        create = new javax.swing.JMenuItem();
        update = new javax.swing.JMenuItem();
        delete = new javax.swing.JMenuItem();
        insert = new javax.swing.JMenuItem();
        alterBtn = new javax.swing.JMenuItem();
        SubSelect = new javax.swing.JMenuItem();
        SubInsert = new javax.swing.JMenuItem();
        SubUpdate = new javax.swing.JMenuItem();
        SubDelete = new javax.swing.JMenuItem();
        SubDelete1 = new javax.swing.JMenuItem();
        SubDelete2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        dropTable.setMnemonic('C');
        dropTable.setToolTipText("");
        dropTable.setLabel("Drop Table");
        dropTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dropTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dropTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dropTableMouseReleased(evt);
            }
        });
        dropTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropTableActionPerformed(evt);
            }
        });
        jPopupMenu1.add(dropTable);

        Refresh.setMnemonic('C');
        Refresh.setToolTipText("");
        Refresh.setLabel("Refresh");
        Refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RefreshMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RefreshMouseReleased(evt);
            }
        });
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Refresh);

        create_schema.setMnemonic('C');
        create_schema.setToolTipText("");
        create_schema.setLabel("Create Schema");
        create_schema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                create_schemaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                create_schemaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                create_schemaMouseReleased(evt);
            }
        });
        create_schema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_schemaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(create_schema);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Query Builder");
        setBackground(new java.awt.Color(204, 204, 204));
        setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        setForeground(new java.awt.Color(51, 153, 255));

        jSplitPane1.setDividerLocation(175);
        jSplitPane1.setDividerSize(10);
        jSplitPane1.setOneTouchExpandable(true);

        jpan1.setDividerLocation(500);
        jpan1.setDividerSize(10);
        jpan1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jpan1.setAutoscrolls(true);
        jpan1.setContinuousLayout(true);
        jpan1.setOneTouchExpandable(true);
        jpan1.setOpaque(false);
        jpan1.setTopComponent(jTabbedPane1);

        QueryPane1.setColumns(20);
        QueryPane1.setRows(5);
        jScrollPane2.setViewportView(QueryPane1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/query_builder_1.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jpan1.setRightComponent(jPanel1);

        jSplitPane1.setRightComponent(jpan1);

        tree.setBackground(new java.awt.Color(153, 153, 153));
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                treeMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        javax.swing.GroupLayout treePaneLayout = new javax.swing.GroupLayout(treePane);
        treePane.setLayout(treePaneLayout);
        treePaneLayout.setHorizontalGroup(
            treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
        );
        treePaneLayout.setVerticalGroup(
            treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treePaneLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jSplitPane1.setLeftComponent(treePane);

        jMenu1.setText("File");

        select.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        select.setText("Select");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });
        jMenu1.add(select);

        create.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        create.setText("Create");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });
        jMenu1.add(create);

        update.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jMenu1.add(update);

        delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jMenu1.add(delete);

        insert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        jMenu1.add(insert);

        alterBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        alterBtn.setText("Alter");
        alterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterBtnActionPerformed(evt);
            }
        });
        jMenu1.add(alterBtn);

        SubSelect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        SubSelect.setText("Sub-Select");
        SubSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubSelectActionPerformed(evt);
            }
        });
        jMenu1.add(SubSelect);

        SubInsert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        SubInsert.setText("Sub-Insert");
        SubInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubInsertActionPerformed(evt);
            }
        });
        jMenu1.add(SubInsert);

        SubUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        SubUpdate.setText("Sub-Update");
        SubUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(SubUpdate);

        SubDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        SubDelete.setText("Sub-Delete");
        SubDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(SubDelete);

        SubDelete1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        SubDelete1.setText("Join");
        SubDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDelete1ActionPerformed(evt);
            }
        });
        jMenu1.add(SubDelete1);

        SubDelete2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        SubDelete2.setText("show Query");
        SubDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDelete2ActionPerformed(evt);
            }
        });
        jMenu1.add(SubDelete2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        CreateQuery cq=new CreateQuery();       
//        jpan1.removeAll();
//        jpan1.add(cq);
//        jpan1.revalidate();
//        jpan1.repaint();
        jTabbedPane1.addTab("Create Query",new JScrollPane(cq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
        try {
            tree.removeAll();
            treeCreator();
            tree.updateUI();
//        pos=jTabbedPane1.indexOfComponent(cq);
//        jTabbedPane1.addTab("Create Query",new JScrollPane(cq));
//        ImageIcon im=new ImageIcon((Toolkit.getDefaultToolkit().getImage("C:\\Users\\vikas\\Documents\\NetBeansProjects\\QueryBuilder\\src\\Image\\closeTabButton.png")));
//        JButton closebtn=new JButton(im);
//        closebtn.addActionListener(new ActionWork());
//        jTabbedPane1.setTabComponentAt(0,closebtn);
            //jTabbedPane1.setTitleAt(0, "Create Query");
        } catch (SQLException ex) {
            Logger.getLogger(QBPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_createActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        SelectQuery sq=new SelectQuery();
        //NewJPanel sq=new NewJPanel();
//        jpan1.removeAll();
//        jpan1.add(sq);
//        jpan1.revalidate();
//        jpan1.repaint();
        jTabbedPane1.addTab("Select Query",new JScrollPane(sq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
          //QueryPane.setText(sq.getQueryText());
//        ImageIcon im=new ImageIcon((Toolkit.getDefaultToolkit().getImage("C:\\Users\\vikas\\Documents\\NetBeansProjects\\QueryBuilder\\src\\Image\\closeTabButton.png")));
//        JButton closebtn=new JButton(im);
//        closebtn.addActionListener(new ActionWork());
//        jTabbedPane1.setTabComponentAt(pos,closebtn);
        //jTabbedPane1.setTitleAt(0, "Select Query");
    }//GEN-LAST:event_selectActionPerformed
    
    public void setQuery(String query)
    {
        this.query=query;
        System.out.println("I am 111 "+this.query);
        QueryPane1.setText(this.query);
        QueryPane1.setText("Hiiiiiiiiiiiiiiiiiiiiiiiii");
    }
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        UpdateQuery2 uq=new UpdateQuery2();
//        jpan1.removeAll();
//        jpan1.add(uq);
//        jpan1.revalidate();
//        jpan1.repaint();
        jTabbedPane1.addTab("Update Query",new JScrollPane(uq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
//        pos=jTabbedPane1.indexOfComponent(uq);
//        jTabbedPane1.addTab("Update Query",new JScrollPane(uq));
//        ImageIcon im=new ImageIcon((Toolkit.getDefaultToolkit().getImage("C:\\Users\\vikas\\Documents\\NetBeansProjects\\QueryBuilder\\src\\Image\\closeTabButton.png")));
//        JButton closebtn=new JButton(im);
//        closebtn.addActionListener(new ActionWork());
//        jTabbedPane1.setTabComponentAt(0,closebtn);
        //jTabbedPane1.setTitleAt(0, "Update Query");
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DeleteQuery dq=new DeleteQuery();
//        jpan1.removeAll();
//        jpan1.add(dq);
//        jpan1.revalidate();
//        jpan1.repaint();
        jTabbedPane1.addTab("Select Query",new JScrollPane(dq));    
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
    }//GEN-LAST:event_deleteActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        InsertQuery iq=new InsertQuery();
//        jpan1.removeAll();
//        jpan1.add(iq);
//        jpan1.revalidate();
//        jpan1.repaint();
        jTabbedPane1.addTab("Insert Query",new JScrollPane(iq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);        
    }//GEN-LAST:event_insertActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SubSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubSelectActionPerformed
//        SubSelectQuery subsq=new SubSelectQuery();
        SubSelectQuery2 subsq=new SubSelectQuery2();
        jTabbedPane1.addTab("Sub Select Query",new JScrollPane(subsq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
    }//GEN-LAST:event_SubSelectActionPerformed

    private void SubInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubInsertActionPerformed
        SubInsertQuery2 subiq1=new SubInsertQuery2();
        jTabbedPane1.addTab("Sub Insert Query", new JScrollPane(subiq1));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
    }//GEN-LAST:event_SubInsertActionPerformed

    private void SubUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubUpdateActionPerformed
//        SubUpdateQuery subuq=new SubUpdateQuery();
        SubUpdateQuery2 subuq=new SubUpdateQuery2();
        jTabbedPane1.addTab("Sub Update Query", new JScrollPane(subuq));        
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
    }//GEN-LAST:event_SubUpdateActionPerformed

    private void SubDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDeleteActionPerformed
        SubDeleteQuery subdq=new SubDeleteQuery();
        jTabbedPane1.addTab("Sub Delete Query", new JScrollPane(subdq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
    }//GEN-LAST:event_SubDeleteActionPerformed

    private void SubDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDelete1ActionPerformed
         try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JoinPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(JoinPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(JoinPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(JoinPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        JoinPanel jp=new JoinPanel();
        //jp.add(new NewJInternalFrame());
        jTabbedPane1.addTab("Join", new JScrollPane(jp));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
    }//GEN-LAST:event_SubDelete1ActionPerformed

    private void treeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseReleased
       DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
       if(node==null)
       {
           return;
       }
       if(node.getLevel()==-1)
       {
           return;
       }
           if(node.getLevel()==2)
           {
               dropTable.setEnabled(true);
           }
           else
           {
               dropTable.setEnabled(false);
           }
        if(evt.getButton()==MouseEvent.BUTTON3)
       {           
           jPopupMenu1.show(tree, evt.getX(), evt.getY());           
       }
    }//GEN-LAST:event_treeMouseReleased

    private void dropTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropTableMouseClicked
        System.out.println(tree.getSelectionPath());
    }//GEN-LAST:event_dropTableMouseClicked

    private void dropTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropTableMousePressed
        //System.out.println(tree.getSelectionPath());
    }//GEN-LAST:event_dropTableMousePressed

    private void dropTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropTableMouseReleased
        System.out.println(tree.getSelectionPath());
    }//GEN-LAST:event_dropTableMouseReleased

    private void alterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterBtnActionPerformed
        AlterQuery aq=new AlterQuery();
        jTabbedPane1.addTab("Alter Query", new JScrollPane(aq));
//        jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabPlacement());
        jTabbedPane1.setSelectedIndex(++pos);
        
    }//GEN-LAST:event_alterBtnActionPerformed

    private void dropTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropTableActionPerformed
        DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();        
        String schema=node.getParent().toString();
        String table=node.toString();
        System.out.println(schema+" "+table);
         try {
                System.out.println("Drop table "+schema+"."+table);
                pstmt=getConn().prepareStatement("Drop table "+schema+"."+table);
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    JOptionPane.showMessageDialog(null, "Table is create successfully ....");
                    model.removeNodeFromParent(node);
                    model.reload();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Fail to create Table ....");
                }
            }
            catch (Exception e)
            {               
                e.printStackTrace();
            }
    }//GEN-LAST:event_dropTableActionPerformed

    private void RefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseClicked

    private void RefreshMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMousePressed

    private void RefreshMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseReleased

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        try {
            DefaultTreeModel model=(DefaultTreeModel) tree.getModel();
            treeCreator();
            model.reload();
        } catch (SQLException ex) {
            Logger.getLogger(QBPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
        DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
       if(node==null)
       {
           return;
       }
        if(node.getLevel()==-1)
       {
           return;
       }   
        if(node.getLevel()==2)
           {
               dropTable.setEnabled(true);
           }
           else
           {
               dropTable.setEnabled(false);
           }
    }//GEN-LAST:event_treeMouseClicked

    private void create_schemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_create_schemaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_create_schemaMouseClicked

    private void create_schemaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_create_schemaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_create_schemaMousePressed

    private void create_schemaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_create_schemaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_create_schemaMouseReleased

    private void create_schemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_schemaActionPerformed
        new NewSchema().setVisible(true);
    }//GEN-LAST:event_create_schemaActionPerformed

    private void SubDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDelete2ActionPerformed
        System.out.println(query);
        QueryPane1.setText(query);
    }//GEN-LAST:event_SubDelete2ActionPerformed
    
    public void treeCreator() throws SQLException
	{
		//creation of JTree
                pstmt_schema_tree=getConn().prepareStatement("show schemas");
                ResultSet rs_schema_tree=pstmt_schema_tree.executeQuery();
                ResultSet rs_table_tree;
                ResultSet rs_field_tree;
                DefaultMutableTreeNode all=new DefaultMutableTreeNode("Database Schema");
                while(rs_schema_tree.next())
                {
                    DefaultMutableTreeNode schema=new DefaultMutableTreeNode(rs_schema_tree.getString(1));
                    System.out.println(rs_schema_tree.getString(1));
                    
                    pstmt_table_tree=getConn().prepareStatement("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND TABLE_SCHEMA=?");
	
                    pstmt_table_tree.setString(1, rs_schema_tree.getString(1));
	
                    rs_table_tree=pstmt_table_tree.executeQuery();
	
                    while(rs_table_tree.next())
	
                    {
                        DefaultMutableTreeNode table=new DefaultMutableTreeNode(rs_table_tree.getString(1));
                        System.out.println(rs_table_tree.getString(1));
                        pstmt_field_tree=getConn().prepareStatement("select * from "+rs_schema_tree.getString(1)+"."+rs_table_tree.getString(1));
                        //pstmt_field_tree.setString(1, rs_table_tree.getString(1));
                        rs_field_tree=pstmt_field_tree.executeQuery();
                        ResultSetMetaData rsmd_tree=rs_field_tree.getMetaData();
                        int count_tree=rsmd_tree.getColumnCount();
                        for(int i=1;i<=count_tree;i++)
                        {
                            //DefaultMutableTreeNode root=new DefaultMutableTreeNode("Employee");
                            DefaultMutableTreeNode field=new DefaultMutableTreeNode(rsmd_tree.getColumnName(i)+"  "+rsmd_tree.getColumnTypeName(i));
                            table.add(field);
                            //DefaultMutableTreeNode child2=new DefaultMutableTreeNode("Name");
                            //child.add(child2);
                        }
                        schema.add(table);
                    }
                    all.add(schema);
                }
                DefaultTreeModel treemod=(DefaultTreeModel) tree.getModel();
                treemod.setRoot(all);
                tree.setModel(treemod);
                //p1.setComponentPopupMenu(popup_tree);
	}

    /**
     * @return the QueryPane
     */
    public javax.swing.JTextArea getQueryPane() {
        return QueryPane1;
    }
    
    private class ActionWork implements ActionListener
    {

        @Override
        public void actionPerformed(ActionEvent e) {
            jTabbedPane1.remove(0);
        }
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QBPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QBPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QBPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QBPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QBPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea QueryPane1;
    private javax.swing.JMenuItem Refresh;
    private javax.swing.JMenuItem SubDelete;
    private javax.swing.JMenuItem SubDelete1;
    private javax.swing.JMenuItem SubDelete2;
    private javax.swing.JMenuItem SubInsert;
    private javax.swing.JMenuItem SubSelect;
    private javax.swing.JMenuItem SubUpdate;
    private javax.swing.JMenuItem alterBtn;
    private javax.swing.JMenuItem create;
    private javax.swing.JMenuItem create_schema;
    private javax.swing.JMenuItem delete;
    private javax.swing.JMenuItem dropTable;
    private javax.swing.JMenuItem insert;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSplitPane jpan1;
    private javax.swing.JMenuItem select;
    private javax.swing.JTree tree;
    private javax.swing.JPanel treePane;
    private javax.swing.JMenuItem update;
    // End of variables declaration//GEN-END:variables
}
