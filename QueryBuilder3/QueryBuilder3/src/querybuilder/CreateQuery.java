/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package querybuilder;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author vikas
 */
public class CreateQuery extends javax.swing.JPanel {

    private Connection conn;
    private ResultSet rs;
    private PreparedStatement pstmt,pstmt_schema,pstmt_table,pstmt_field;
    private int column_count;
    public CreateQuery() {
        initComponents();
        table.setRowHeight(20);
        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/vikas", "root", "root");
            conn=QBPanel1.getConn();
            //add value to schema combobox
            pstmt_schema=conn.prepareStatement("show schemas");
            ResultSet rs_schema=pstmt_schema.executeQuery();
            while(rs_schema.next())
            {
          	schema.addItem(rs_schema.getString(1));
		//subschemacombo.addItem(rs_schema.getString(1));
		System.out.println(rs_schema.getString(1));
            }
            
            //combobox in table cell
            String data[]={"VARCHAR(45)","INTEGER(45)","DOUBLE","LONGBLOB","LONGTEXT"};
            JComboBox<String> com=new JComboBox<>(data);
            com.setEditable(true);
            TableColumn tc=table.getColumnModel().getColumn(1);           
            TableCellEditor tce=new DefaultCellEditor(com);
            tc.setCellEditor(tce);
        } 
        catch (Exception e) 
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        err_msg = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        schema = new javax.swing.JComboBox();
        tablename = new javax.swing.JTextField();
        err_msg1 = new javax.swing.JLabel();
        addColbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        deleteColbtn = new javax.swing.JButton();
        crreateBtn = new javax.swing.JButton();

        table1.setBackground(new java.awt.Color(153, 153, 0));
        table1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(0, 0, 0), new java.awt.Color(51, 0, 51), new java.awt.Color(153, 204, 255)));
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Column Name", "Datatype", "Auto-Inc", "Not-Null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table1.setSelectionBackground(new java.awt.Color(51, 255, 255));
        table1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        table1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table1);

        setBackground(new java.awt.Color(0, 153, 153));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Query", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16), new java.awt.Color(255, 51, 51))); // NOI18N
        setAutoscrolls(true);

        err_msg.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        err_msg.setForeground(new java.awt.Color(51, 51, 255));

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel2.setText("Select Schema");
        jLabel2.setAutoscrolls(true);

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel1.setText("Table Name");
        jLabel1.setAutoscrolls(true);

        schema.setAutoscrolls(true);
        schema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemaActionPerformed(evt);
            }
        });

        err_msg1.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        err_msg1.setForeground(new java.awt.Color(51, 51, 255));
        err_msg1.setAutoscrolls(true);

        addColbtn.setText("Add Column");
        addColbtn.setAutoscrolls(true);
        addColbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addColbtnActionPerformed(evt);
            }
        });

        table.setBackground(new java.awt.Color(153, 153, 0));
        table.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(0, 0, 0), new java.awt.Color(51, 0, 51), new java.awt.Color(153, 204, 255)));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Column Name", "Datatype", "Auto-Inc", "Not-Null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setSelectionBackground(new java.awt.Color(51, 255, 255));
        table.setSelectionForeground(new java.awt.Color(0, 0, 0));
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        deleteColbtn.setText("Delete Column");
        deleteColbtn.setAutoscrolls(true);
        deleteColbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteColbtnActionPerformed(evt);
            }
        });

        crreateBtn.setText("Create Table");
        crreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crreateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(crreateBtn)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(err_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(142, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(err_msg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                    .addGap(25, 25, 25)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(schema, 0, 194, Short.MAX_VALUE)
                                        .addComponent(tablename)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(497, 497, 497)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(deleteColbtn)
                                .addComponent(addColbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(19, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(err_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(crreateBtn)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(schema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tablename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addComponent(addColbtn)
                            .addGap(18, 18, 18)
                            .addComponent(deleteColbtn))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(err_msg1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(119, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void schemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schemaActionPerformed

    private void addColbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addColbtnActionPerformed
        DefaultTableModel tbmod=(DefaultTableModel)table.getModel();
        tbmod.addRow(new Object[]{"","",false,false});

    }//GEN-LAST:event_addColbtnActionPerformed

    private void deleteColbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteColbtnActionPerformed
        DefaultTableModel tbmod=(DefaultTableModel)table.getModel();
        if(table.getSelectedRow()==-1)
        {
            if(table.getColumnCount()==0)
            {
                err_msg.setText("Table is Empty ....");
            }
            else
            {
                err_msg.setText("You must select one row ....");
            }
        }
        else
        {
            tbmod.removeRow(table.getSelectedRow());
        }
    }//GEN-LAST:event_deleteColbtnActionPerformed

    private void crreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crreateBtnActionPerformed
        DefaultTableModel tbmod=(DefaultTableModel)table.getModel();
        if(table.getSelectedRow()==-1)
        {
            if(table.getColumnCount()==0)
            {
                err_msg.setText("Table is Empty ....");
            }
            else
            {
                err_msg.setText("You must select one row ....");
            }
        }
        else
        {
            try {
                String col_datatype="";

                for(int i=0;i<table.getRowCount();i++)
                {
                    col_datatype=col_datatype+tbmod.getValueAt(i, 0)+" "+tbmod.getValueAt(i, 1)+",";
                }
                col_datatype=col_datatype.substring(0, col_datatype.length()-1);
                System.out.print(col_datatype);
                pstmt=conn.prepareStatement("create table "
                    +schema.getSelectedItem().toString()+"."+tablename.getText()
                    +"("
                    +col_datatype
                    +")"
                );
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    err_msg.setText("Table is create successfully ....");                    
                }
                else
                {
                    err_msg.setText("Fail to create Table ....");
                }
            } catch (Exception e)
            {
                err_msg.setText(e.getMessage());
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_crreateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addColbtn;
    private javax.swing.JButton crreateBtn;
    private javax.swing.JButton deleteColbtn;
    private javax.swing.JLabel err_msg;
    private javax.swing.JLabel err_msg1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox schema;
    private javax.swing.JTable table;
    private javax.swing.JTable table1;
    private javax.swing.JTextField tablename;
    // End of variables declaration//GEN-END:variables
}
