/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.1433
 */

package querybuilder;

import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import static querybuilder.SelectQuery_w_orcl.getConn;
import querybuilder.subquery.SubDeleteQuery;
import querybuilder.subquery.SubDeleteQuery_w_orcl;
import querybuilder.subquery.SubInsertQuery2;
import querybuilder.subquery.SubInsertQuery_w_orcl;
import querybuilder.subquery.SubSelectQuery2;
import querybuilder.subquery.SubSelectQuery_w_orcl;
import querybuilder.subquery.SubUpdateQuery2;
import querybuilder.subquery.SubUpdateQuery_w_orcl;
import querybuilder_oracle.AlterQuery_orcl;
import querybuilder_oracle.CreateQuery_orcl;
import querybuilder_oracle.DeleteQuery_orcl;
import querybuilder_oracle.JoinPanel_orcl;
import querybuilder_oracle.SelectQuery_orcl;
import querybuilder_oracle.SubDeleteQuery_orcl;
import querybuilder_oracle.SubSelectQuery_orcl;
import querybuilder_oracle.SubUpdateQuery_orcl;
import querybuilder_oracle.UpdateQuery_orcl;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author vikas
 */
public class QBPanel1 extends javax.swing.JFrame {

    private static Connection conn;

    /**
     * @return the conn
     */
    public static Connection getConn() {
        return conn;
    }

    /**
     * @param aConn the conn to set
     */
    public static void setConn(Connection aConn) {
        conn = aConn;
    }

    /**
     * @return the queryString
     */
    public static String getQueryString() {
        return queryString;
    }

    /**
     * @param aQueryString the queryString to set
     */
    public static void setQueryString(String aQueryString) {
        queryString = aQueryString;
    }
    private ResultSet rs;
    private PreparedStatement pstmt,pstmt_schema_tree,pstmt_table_tree,pstmt_field_tree;
    private int pos=-1;
    private static String queryString="";
    public QBPanel1() {
        initComponents();
        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306", "root", "root");
            setConn(StartWindow.getConn());
            if(StartWindow.getDatabase_string().equals("MySQL"))
            {
                treeCreator();
            }
            else if(StartWindow.getDatabase_string().equals("ORACLE"))
            {
                treeCreator_orcl();
            }  
            else if(StartWindow.getDatabase_string().equals("MS-Access"))
            {
                treeCreator_acc();
            }  
            
            setLocationRelativeTo(null);
            setIconImage(Toolkit.getDefaultToolkit().getImage("D:\\MyProject\\QueryBuilder3\\src\\Image\\synthetica.png"));
            //QueryPane.setText();
//            UIManager.setLookAndFeel("com.alee.laf.WebLookAndFeel");
        } 
        catch (Exception e) 
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        dropTable = new javax.swing.JMenuItem();
        Refresh = new javax.swing.JMenuItem();
        create_schema = new javax.swing.JMenuItem();
        drop_schema = new javax.swing.JMenuItem();
        Truncate = new javax.swing.JMenuItem();
        RenameTable = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        jpan1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        QueryPane1 = new javax.swing.JTextArea();
        directExecute = new javax.swing.JButton();
        treePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        savebtn = new javax.swing.JMenuItem();
        openbtn = new javax.swing.JMenuItem();
        SubDelete2 = new javax.swing.JMenuItem();
        SubDelete3 = new javax.swing.JMenuItem();
        exitbtn = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        select13 = new javax.swing.JMenuItem();
        insert1 = new javax.swing.JMenuItem();
        delete1 = new javax.swing.JMenuItem();
        update1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        alterBtn1 = new javax.swing.JMenuItem();
        create1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        SubSelect1 = new javax.swing.JMenuItem();
        SubInsert1 = new javax.swing.JMenuItem();
        SubUpdate1 = new javax.swing.JMenuItem();
        SubDelete5 = new javax.swing.JMenuItem();
        SubDelete4 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        select7 = new javax.swing.JMenuItem();
        select4 = new javax.swing.JMenuItem();
        select3 = new javax.swing.JMenuItem();
        select5 = new javax.swing.JMenuItem();
        select6 = new javax.swing.JMenuItem();
        select1 = new javax.swing.JMenuItem();
        select14 = new javax.swing.JMenuItem();
        select15 = new javax.swing.JMenuItem();
        select16 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        select10 = new javax.swing.JMenuItem();
        select12 = new javax.swing.JMenuItem();
        select11 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        select2 = new javax.swing.JMenuItem();
        select8 = new javax.swing.JMenuItem();
        select9 = new javax.swing.JMenuItem();

        dropTable.setMnemonic('C');
        dropTable.setToolTipText("");
        dropTable.setLabel("Drop Table");
        dropTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dropTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dropTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dropTableMouseReleased(evt);
            }
        });
        dropTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropTableActionPerformed(evt);
            }
        });
        jPopupMenu1.add(dropTable);

        Refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh2.png"))); // NOI18N
        Refresh.setMnemonic('C');
        Refresh.setToolTipText("");
        Refresh.setLabel("Refresh");
        Refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RefreshMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RefreshMouseReleased(evt);
            }
        });
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Refresh);

        create_schema.setMnemonic('C');
        create_schema.setToolTipText("");
        create_schema.setLabel("Create Schema");
        create_schema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                create_schemaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                create_schemaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                create_schemaMouseReleased(evt);
            }
        });
        create_schema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_schemaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(create_schema);

        drop_schema.setMnemonic('C');
        drop_schema.setText("drop Schema");
        drop_schema.setToolTipText("");
        drop_schema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drop_schemaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drop_schemaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                drop_schemaMouseReleased(evt);
            }
        });
        drop_schema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop_schemaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(drop_schema);

        Truncate.setMnemonic('C');
        Truncate.setText("Truncate Table");
        Truncate.setToolTipText("");
        Truncate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TruncateMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TruncateMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TruncateMouseReleased(evt);
            }
        });
        Truncate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TruncateActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Truncate);

        RenameTable.setMnemonic('C');
        RenameTable.setText("Rename Table");
        RenameTable.setToolTipText("");
        RenameTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RenameTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RenameTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RenameTableMouseReleased(evt);
            }
        });
        RenameTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenameTableActionPerformed(evt);
            }
        });
        jPopupMenu1.add(RenameTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Query Builder");
        setBackground(new java.awt.Color(204, 204, 204));
        setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        setForeground(new java.awt.Color(51, 153, 255));

        jSplitPane1.setDividerLocation(175);
        jSplitPane1.setDividerSize(10);
        jSplitPane1.setOneTouchExpandable(true);

        jpan1.setDividerLocation(550);
        jpan1.setDividerSize(10);
        jpan1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jpan1.setAutoscrolls(true);
        jpan1.setContinuousLayout(true);
        jpan1.setOneTouchExpandable(true);
        jpan1.setOpaque(false);
        jpan1.setTopComponent(jTabbedPane1);

        QueryPane1.setBackground(new java.awt.Color(204, 204, 255));
        QueryPane1.setColumns(20);
        QueryPane1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        QueryPane1.setRows(5);
        QueryPane1.setWrapStyleWord(true);
        QueryPane1.setAutoscrolls(false);
        jScrollPane2.setViewportView(QueryPane1);

        directExecute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Image.gif"))); // NOI18N
        directExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directExecuteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(directExecute, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
        );

        jpan1.setRightComponent(jPanel1);

        jSplitPane1.setRightComponent(jpan1);

        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                treeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                treeMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        javax.swing.GroupLayout treePaneLayout = new javax.swing.GroupLayout(treePane);
        treePane.setLayout(treePaneLayout);
        treePaneLayout.setHorizontalGroup(
            treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
        );
        treePaneLayout.setVerticalGroup(
            treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(treePane);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Save-icon.png"))); // NOI18N
        jButton1.setToolTipText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/open-file-icon.png"))); // NOI18N
        jButton2.setToolTipText("Open");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/database.jpg"))); // NOI18N
        jButton3.setToolTipText("Change Database");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/showquery_1.png"))); // NOI18N
        jButton4.setToolTipText("Show Query");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh2.png"))); // NOI18N
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
            .addComponent(refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        savebtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        savebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Save-icon.png"))); // NOI18N
        savebtn.setText("Save");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        jMenu1.add(savebtn);

        openbtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        openbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/open-file-icon.png"))); // NOI18N
        openbtn.setText("Open");
        openbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openbtnActionPerformed(evt);
            }
        });
        jMenu1.add(openbtn);

        SubDelete2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/showquery_1.png"))); // NOI18N
        SubDelete2.setText("show Query");
        SubDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDelete2ActionPerformed(evt);
            }
        });
        jMenu1.add(SubDelete2);

        SubDelete3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/database.jpg"))); // NOI18N
        SubDelete3.setText("Change Database");
        SubDelete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDelete3ActionPerformed(evt);
            }
        });
        jMenu1.add(SubDelete3);

        exitbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/exit.jpg"))); // NOI18N
        exitbtn.setText("Exit");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        jMenu1.add(exitbtn);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("DML");

        select13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        select13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/table_1.png"))); // NOI18N
        select13.setText("Select");
        select13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select13ActionPerformed(evt);
            }
        });
        jMenu2.add(select13);

        insert1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        insert1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/insert.png"))); // NOI18N
        insert1.setText("Insert");
        insert1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert1ActionPerformed(evt);
            }
        });
        jMenu2.add(insert1);

        delete1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        delete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/table_row_delete.png"))); // NOI18N
        delete1.setText("Delete");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });
        jMenu2.add(delete1);

        update1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        update1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/edit-validated-icon.png"))); // NOI18N
        update1.setText("Update");
        update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1ActionPerformed(evt);
            }
        });
        jMenu2.add(update1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("DDL");

        alterBtn1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        alterBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Generate-tables-icon.png"))); // NOI18N
        alterBtn1.setText("Alter");
        alterBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterBtn1ActionPerformed(evt);
            }
        });
        jMenu3.add(alterBtn1);

        create1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        create1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Database-Table-icon.png"))); // NOI18N
        create1.setText("Create");
        create1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create1ActionPerformed(evt);
            }
        });
        jMenu3.add(create1);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("ADV.SQL");

        SubSelect1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        SubSelect1.setText("Sub-Select");
        SubSelect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubSelect1ActionPerformed(evt);
            }
        });
        jMenu4.add(SubSelect1);

        SubInsert1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        SubInsert1.setText("Sub-Insert");
        SubInsert1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubInsert1ActionPerformed(evt);
            }
        });
        jMenu4.add(SubInsert1);

        SubUpdate1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        SubUpdate1.setText("Sub-Update");
        SubUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubUpdate1ActionPerformed(evt);
            }
        });
        jMenu4.add(SubUpdate1);

        SubDelete5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        SubDelete5.setText("Sub-Delete");
        SubDelete5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDelete5ActionPerformed(evt);
            }
        });
        jMenu4.add(SubDelete5);

        SubDelete4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.ALT_MASK));
        SubDelete4.setText("Join");
        SubDelete4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubDelete4ActionPerformed(evt);
            }
        });
        jMenu4.add(SubDelete4);

        jMenuBar1.add(jMenu4);

        jMenu6.setText("Look & Feel");

        jMenu7.setText("Synthetica");

        select7.setText("Synthetica Green Dream");
        select7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select7ActionPerformed(evt);
            }
        });
        jMenu7.add(select7);

        select4.setText("Synthetica Mauve Metallic");
        select4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select4ActionPerformed(evt);
            }
        });
        jMenu7.add(select4);

        select3.setText("Synthetica Black Star");
        select3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select3ActionPerformed(evt);
            }
        });
        jMenu7.add(select3);

        select5.setText("Synthetica Orange Metallic");
        select5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select5ActionPerformed(evt);
            }
        });
        jMenu7.add(select5);

        select6.setText("Synthetica Blue Light");
        select6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select6ActionPerformed(evt);
            }
        });
        jMenu7.add(select6);

        select1.setText("Synthetica Classy");
        select1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select1ActionPerformed(evt);
            }
        });
        jMenu7.add(select1);

        select14.setText("Synthetica AluOxide");
        select14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select14ActionPerformed(evt);
            }
        });
        jMenu7.add(select14);

        select15.setText("Synthetica BlueMoon");
        select15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select15ActionPerformed(evt);
            }
        });
        jMenu7.add(select15);

        select16.setText("Synthetica BlueEye");
        select16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select16ActionPerformed(evt);
            }
        });
        jMenu7.add(select16);

        jMenu6.add(jMenu7);

        jMenu8.setText("JTattoo");

        jMenuItem1.setText("HiFi");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem1);

        jMenuItem2.setText("Luna");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem2);

        jMenuItem3.setText("McWin");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem3);

        jMenuItem4.setText("Acryl");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem4);

        jMenuItem5.setText("Bernstein");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem5);

        jMenu6.add(jMenu8);

        jMenuBar1.add(jMenu6);

        jMenu9.setText("Utility");

        select10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/calculator.png"))); // NOI18N
        select10.setText("Calculator");
        select10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select10ActionPerformed(evt);
            }
        });
        jMenu9.add(select10);

        select12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/notpad.png"))); // NOI18N
        select12.setText("Notepad");
        select12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select12ActionPerformed(evt);
            }
        });
        jMenu9.add(select12);

        select11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/shutdown1.png"))); // NOI18N
        select11.setText("Shut Down");
        select11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select11ActionPerformed(evt);
            }
        });
        jMenu9.add(select11);

        jMenuBar1.add(jMenu9);

        jMenu5.setText("Help");

        select2.setText("About QB");
        select2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select2ActionPerformed(evt);
            }
        });
        jMenu5.add(select2);

        select8.setText("Online Help");
        select8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select8ActionPerformed(evt);
            }
        });
        jMenu5.add(select8);

        select9.setText("User Manual");
        select9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select9ActionPerformed(evt);
            }
        });
        jMenu5.add(select9);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void playSound(String path)
    {
        InputStream in;
        try 
        {
            in=new FileInputStream(new File(path));
            AudioStream audios=new AudioStream(in);
            AudioPlayer.player.start(audios);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }    
    public void setQuery(String query)
    {
//        this.query=query;
//        System.out.println("I am 111 "+this.query);
//        QueryPane1.setText(this.query);
//        QueryPane1.setText("Hiiiiiiiiiiiiiiiiiiiiiiiii");
    }    
    private void treeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseReleased
       DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
       if(node==null)
       {
           return;
       }       
       if(node.getLevel()==-1)
       {
           return;
       }
       if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            create_schema.setEnabled(true);
            drop_schema.setEnabled(true);
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {
            create_schema.setEnabled(false);
            drop_schema.setEnabled(false);
        }
           if(StartWindow.getDatabase_string().equals("MySQL"))
            {
         if(node.getLevel()==2)
           {
               dropTable.setEnabled(true);
               RenameTable.setEnabled(true);
               Truncate.setEnabled(true);
               create_schema.setEnabled(false);
               drop_schema.setEnabled(false);
           }
           else
           {
               dropTable.setEnabled(false);
               RenameTable.setEnabled(false);
               Truncate.setEnabled(false);
               create_schema.setEnabled(true);
               drop_schema.setEnabled(true);
           }  
         if(node.getLevel()==3 || node.getLevel()==0)
           {
               dropTable.setEnabled(false);
               RenameTable.setEnabled(false);
               Truncate.setEnabled(false);
               create_schema.setEnabled(false);
               drop_schema.setEnabled(false);
           }          
            }
            else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
            {
         if(node.getLevel()==1)
           {
               dropTable.setEnabled(true);
               RenameTable.setEnabled(true);
               Truncate.setEnabled(true);
               create_schema.setEnabled(false);
               drop_schema.setEnabled(false);
           }
           else
           {
               dropTable.setEnabled(false);
               RenameTable.setEnabled(false);
               Truncate.setEnabled(false);
               create_schema.setEnabled(true);
               drop_schema.setEnabled(true);
           }  
         if(node.getLevel()==2 || node.getLevel()==0)
           {
               dropTable.setEnabled(false);
               RenameTable.setEnabled(false);
               Truncate.setEnabled(false);
               create_schema.setEnabled(false);
               drop_schema.setEnabled(false);
           }      
            }
        if(evt.getButton()==MouseEvent.BUTTON3)
       {           
           jPopupMenu1.show(tree, evt.getX(), evt.getY());           
       }
    }//GEN-LAST:event_treeMouseReleased

    private void dropTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropTableMouseClicked
        System.out.println(tree.getSelectionPath());
    }//GEN-LAST:event_dropTableMouseClicked

    private void dropTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropTableMousePressed
        //System.out.println(tree.getSelectionPath());
    }//GEN-LAST:event_dropTableMousePressed

    private void dropTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropTableMouseReleased
        System.out.println(tree.getSelectionPath());
    }//GEN-LAST:event_dropTableMouseReleased

    private void dropTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropTableActionPerformed
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();        
        String schema=node.getParent().toString();
        String table=node.toString();
        System.out.println(schema+" "+table);
         try {
                System.out.println("Drop table "+schema+"."+table);
                pstmt=getConn().prepareStatement("Drop table "+schema+"."+table);
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    JOptionPane.showMessageDialog(null, "Table is drop successfully ....");
                    model.removeNodeFromParent(node);
                    model.reload();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Fail to drop Table ....");
                }
            }
            catch (Exception e)
            {               
                e.printStackTrace();
            }
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();                
        String table=node.toString();
        System.out.println(table);
         try {
                System.out.println("Drop table "+table);
                pstmt=getConn().prepareStatement("Drop table "+table);
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    JOptionPane.showMessageDialog(null, "Table is drop successfully ....");
                    model.removeNodeFromParent(node);
                    model.reload();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Fail to drop Table ....");
                }
            }
            catch (Exception e)
            {               
                e.printStackTrace();
            }
        }         
    }//GEN-LAST:event_dropTableActionPerformed

    private void RefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseClicked

    private void RefreshMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMousePressed

    private void RefreshMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshMouseReleased

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        try {
            DefaultTreeModel model=(DefaultTreeModel) tree.getModel();
            if(StartWindow.getDatabase_string().equals("MySQL"))
            {
                treeCreator();
            }
            else if(StartWindow.getDatabase_string().equals("ORACLE"))
            {
                treeCreator_orcl();
            }  
            else if(StartWindow.getDatabase_string().equals("MS-Access"))
            {
                treeCreator_acc();
            }  
            model.reload();
        } catch (SQLException ex) {
            Logger.getLogger(QBPanel1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
       
        DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();        
       if(node==null)
       {
           return;
       }
        if(node.getLevel()==-1)
       {
           return;
       } 
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            create_schema.setEnabled(true);
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {
            create_schema.setEnabled(false);
        }
        if(StartWindow.getDatabase_string().equals("MySQL"))
            {
         if(node.getLevel()==2)
           {
               dropTable.setEnabled(true);
               RenameTable.setEnabled(true);
               Truncate.setEnabled(true);
           }
           else
           {
               dropTable.setEnabled(false);
               RenameTable.setEnabled(false);
               Truncate.setEnabled(false);
           }      
            }
            else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
            {
         if(node.getLevel()==1)
           {
               dropTable.setEnabled(true);
               RenameTable.setEnabled(true);
               Truncate.setEnabled(true);
           }
           else
           {
               dropTable.setEnabled(false);
               RenameTable.setEnabled(false);
               Truncate.setEnabled(false);
           }       
            }
        
    }//GEN-LAST:event_treeMouseClicked

    private void create_schemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_create_schemaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_create_schemaMouseClicked

    private void create_schemaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_create_schemaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_create_schemaMousePressed

    private void create_schemaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_create_schemaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_create_schemaMouseReleased

    private void create_schemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_schemaActionPerformed
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            new NewSchema().setVisible(true);
        }
    }//GEN-LAST:event_create_schemaActionPerformed

    private void SubDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDelete2ActionPerformed
//        System.out.println(UpdateQuery_orcl.getQueryString());        
//        QueryPane1.setText(UpdateQuery_orcl.getQueryString());  
        System.out.println(getQueryString());        
        QueryPane1.setText(getQueryString());        
    }//GEN-LAST:event_SubDelete2ActionPerformed

    private void directExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directExecuteActionPerformed
        try 
        {
            if(QueryPane1.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Query was empty ...");
                return;
            }
            pstmt=getConn().prepareStatement(QueryPane1.getText());
            boolean ii=pstmt.execute();    
            if(ii)
            {
                rs=pstmt.executeQuery();//print Query on Query Pane in QBPanel1            
                ResultSetMetaData rsmd=rs.getMetaData();
                int no_of_column=rsmd.getColumnCount();
                //for row & column data
                Vector<String> column=new Vector<String>();
                for(int i=1;i<=no_of_column;i++)					
                {   
                    column.addElement(rsmd.getColumnLabel(i));
                }            
                Vector<Object> row=new Vector<Object>();
                int row_count=0;
                while (rs.next())
                {   
                    row_count++;
                    Vector<Object> data=new Vector<Object>(no_of_column);
                    for(int i=1;i<=no_of_column;i++)
                    {
                        data.addElement(rs.getObject(i));
                    }
                    row.addElement(data);
                }
                //table construction
                DefaultTableModel tm=new DefaultTableModel(row, column);
                TableShow ts=new TableShow();
                ts.setVisible(true);
                ts.createTable(tm);                  
            }
            else
            {
                JOptionPane.showMessageDialog(null, " row was affected . . .");
            }
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
         
    }//GEN-LAST:event_directExecuteActionPerformed

    private void SubDelete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDelete3ActionPerformed
//        try {            
//            UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");            
//            
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(QBPanel1.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            Logger.getLogger(QBPanel1.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            Logger.getLogger(QBPanel1.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (UnsupportedLookAndFeelException ex) {
//            Logger.getLogger(QBPanel1.class.getName()).log(Level.SEVERE, null, ex);
//        }
        new StartWindow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SubDelete3ActionPerformed

    private void select1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select1ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaClassyLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select1ActionPerformed

    private void select2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select2ActionPerformed
        try 
        {            
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"D:\\SOFTWAERS\\ieee\\QueryBuilder.rtf");
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select2ActionPerformed

    private void select3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select3ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaBlackStarLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select3ActionPerformed

    private void select4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select4ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaMauveMetallicLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select4ActionPerformed

    private void select5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select5ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaOrangeMetallicLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select5ActionPerformed

    private void select6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select6ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaBlueLightLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select6ActionPerformed

    private void select7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select7ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaGreenDreamLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select7ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("com.jtattoo.plaf.luna.LunaLookAndFeel");                                                 
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");                                                 
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void select8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select8ActionPerformed
        try 
        {
            java.awt.Desktop.getDesktop().browse(java.net.URI.create("http://www.google.com/"));
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select8ActionPerformed

    private void select9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select9ActionPerformed
        try 
        {            
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Windows\\system32\\calc.exe");
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select9ActionPerformed

    private void select10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select10ActionPerformed
        try 
        {            
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Windows\\system32\\calc.exe");
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select10ActionPerformed

    private void select11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select11ActionPerformed
        try 
        {            
            Runtime.getRuntime().exec("shutdown -s -t 0");
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_select11ActionPerformed

    private void select12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select12ActionPerformed
        try 
        {            
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Windows\\system32\\notepad.exe");
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select12ActionPerformed

    private void select13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select13ActionPerformed
        SelectQuery_w_orcl sq=new SelectQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Select Query",new JScrollPane(sq));
    }//GEN-LAST:event_select13ActionPerformed

    private void insert1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert1ActionPerformed
        InsertQuery_w_orcl iq=new InsertQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Insert Query",new JScrollPane(iq));
    }//GEN-LAST:event_insert1ActionPerformed

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
        DeleteQuery_w_orcl dq=new DeleteQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Delete Query",new JScrollPane(dq));
    }//GEN-LAST:event_delete1ActionPerformed

    private void update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1ActionPerformed
        UpdateQuery_w_orcl uq=new UpdateQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Update Query",new JScrollPane(uq));
    }//GEN-LAST:event_update1ActionPerformed

    private void alterBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterBtn1ActionPerformed
        AlterQuery_w_orcl aq=new AlterQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Alter Query",new JScrollPane(aq));
    }//GEN-LAST:event_alterBtn1ActionPerformed

    private void create1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create1ActionPerformed
        CreateQuery_w_orcl cq=new CreateQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Create Query",new JScrollPane(cq));
    }//GEN-LAST:event_create1ActionPerformed

    private void TruncateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TruncateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TruncateMouseClicked

    private void TruncateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TruncateMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TruncateMousePressed

    private void TruncateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TruncateMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TruncateMouseReleased

    private void TruncateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TruncateActionPerformed
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();        
        String schema=node.getParent().toString();
        String table=node.toString();
        System.out.println(schema+" "+table);
         try {
                System.out.println("TRUNCATE TABLE "+schema+"."+table);
                pstmt=getConn().prepareStatement("TRUNCATE TABLE "+schema+"."+table);
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    JOptionPane.showMessageDialog(null, "Table is truncated successfully ....");
//                    model.removeNodeFromParent(node);
//                    model.reload();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Fail to truncate Table ....");
                }
            }
            catch (Exception e)
            {               
                e.printStackTrace();
            }
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();                
        String table=node.toString();
        System.out.println(table);
         try {
                System.out.println("TRUNCATE TABLE "+table);
                pstmt=getConn().prepareStatement("TRUNCATE TABLE "+table);
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    JOptionPane.showMessageDialog(null, "Table is truncated successfully ....");
//                    model.removeNodeFromParent(node);
//                    model.reload();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Fail to truncate Table ....");
                }
            }
            catch (Exception e)
            {               
                e.printStackTrace();
            }
        }    
    }//GEN-LAST:event_TruncateActionPerformed

    private void RenameTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RenameTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_RenameTableMouseClicked

    private void RenameTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RenameTableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_RenameTableMousePressed

    private void RenameTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RenameTableMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RenameTableMouseReleased

    private void RenameTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenameTableActionPerformed
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();        
        String schema=node.getParent().toString();
        String table=node.toString();
        new RenameTableQuery().setVisible(true);
        RenameTableQuery.setNewtablename(schema+"."+table);            
        model.removeNodeFromParent(node);
        model.reload();
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
            DefaultTreeModel model=(DefaultTreeModel) tree.getModel();                
            String table=node.toString();
            new RenameTableQuery().setVisible(true);
            RenameTableQuery.setNewtablename(table);            
            model.removeNodeFromParent(node);
            model.reload();
        }    
    }//GEN-LAST:event_RenameTableActionPerformed

    private void SubDelete4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDelete4ActionPerformed
        JoinPanel_w_orcl2 jq=new JoinPanel_w_orcl2();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Join Query",new JScrollPane(jq));
    }//GEN-LAST:event_SubDelete4ActionPerformed

    private void SubDelete5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubDelete5ActionPerformed
        SubDeleteQuery_w_orcl subdq=new SubDeleteQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Sub-Delete Query",new JScrollPane(subdq));
    }//GEN-LAST:event_SubDelete5ActionPerformed

    private void SubUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubUpdate1ActionPerformed
        SubUpdateQuery_w_orcl subuq=new SubUpdateQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Sub-Update Query",new JScrollPane(subuq));
    }//GEN-LAST:event_SubUpdate1ActionPerformed

    private void SubInsert1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubInsert1ActionPerformed
        SubInsertQuery_w_orcl subiq=new SubInsertQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Sub-Insert Query",new JScrollPane(subiq));
    }//GEN-LAST:event_SubInsert1ActionPerformed

    private void SubSelect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubSelect1ActionPerformed
        SubSelectQuery_w_orcl subsq=new SubSelectQuery_w_orcl();
        jTabbedPane1.removeAll();
        jTabbedPane1.addTab("Sub-Select Query",new JScrollPane(subsq));
    }//GEN-LAST:event_SubSelect1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try 
        {
            if(QueryPane1.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "No Query Text found ...");
                return;
            }
            else
            {
                JFileChooser chooser=new JFileChooser();
                chooser.showOpenDialog(null);
                File f=chooser.getSelectedFile();
                String path=f.getAbsolutePath();
                FileWriter fw=new FileWriter(path);
                BufferedWriter bw=new BufferedWriter(fw);
                QueryPane1.write(bw);
                bw.close();
                QueryPane1.requestFocus();
            }
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try 
        {
            JFileChooser chooser=new JFileChooser();
                chooser.showOpenDialog(null);
                File f=chooser.getSelectedFile();
                String path=f.getAbsolutePath();
                FileReader fw=new FileReader(path);
                BufferedReader bw=new BufferedReader(fw);
                QueryPane1.read(bw, null);
                bw.close();
                QueryPane1.requestFocus();
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        try {
            DefaultTreeModel model=(DefaultTreeModel) tree.getModel();
            if(StartWindow.getDatabase_string().equals("MySQL"))
            {
                treeCreator();
            }
            else if(StartWindow.getDatabase_string().equals("ORACLE"))
            {
                treeCreator_orcl();
            }  
            else if(StartWindow.getDatabase_string().equals("MS-Access"))
            {
                treeCreator_acc();
            }  
            model.reload();
        } catch (SQLException ex) {
            Logger.getLogger(QBPanel1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        try 
        {
            if(QueryPane1.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "No Query Text found ...");
                return;
            }
            else
            {
                JFileChooser chooser=new JFileChooser();
                chooser.showOpenDialog(null);
                File f=chooser.getSelectedFile();
                String path=f.getAbsolutePath();
                FileWriter fw=new FileWriter(path);
                BufferedWriter bw=new BufferedWriter(fw);
                QueryPane1.write(bw);
                bw.close();
                QueryPane1.requestFocus();
            }
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_savebtnActionPerformed

    private void openbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openbtnActionPerformed
        try 
        {
            JFileChooser chooser=new JFileChooser();
                chooser.showOpenDialog(null);
                File f=chooser.getSelectedFile();
                String path=f.getAbsolutePath();
                FileReader fw=new FileReader(path);
                BufferedReader bw=new BufferedReader(fw);
                QueryPane1.read(bw, null);
                bw.close();
                QueryPane1.requestFocus();
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_openbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitbtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.out.println(getQueryString());        
        if(getQueryString().equals(""))
        {
            return;
        }
        QueryPane1.setText(getQueryString());  
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new StartWindow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void treeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMousePressed
        DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        if(node==null)
        {
            return;
        }
        if(node.getLevel()==-1)
        {
            return;
        }                                      
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            String schema=node.getParent().toString();
        String table=node.toString();
        System.out.println(schema+" "+table);
            if(node.getLevel()==2)
            {
                QueryPane1.setText("Select * from "+schema+"."+table);
            }
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {           
            String table=node.toString();
            System.out.println(table);
            if(node.getLevel()==1)
            {
                QueryPane1.setText("Select * from "+table);
            }            
        }
    }//GEN-LAST:event_treeMousePressed

    private void select14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select14ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select14ActionPerformed

    private void select15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select15ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaBlueMoonLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select15ActionPerformed

    private void select16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select16ActionPerformed
        try
        {
            this.dispose();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaBlackEyeLookAndFeel");                           
            new QBPanel1().setVisible(true);
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_select16ActionPerformed

    private void drop_schemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drop_schemaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_drop_schemaMouseClicked

    private void drop_schemaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drop_schemaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_drop_schemaMousePressed

    private void drop_schemaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drop_schemaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_drop_schemaMouseReleased

    private void drop_schemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop_schemaActionPerformed
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {
            DefaultMutableTreeNode node=(DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        DefaultTreeModel model=(DefaultTreeModel) tree.getModel();        
        String schema=node.toString();       
        System.out.println(schema);
         try {
                System.out.println("Drop DATABASE "+schema);
                pstmt=getConn().prepareStatement("Drop DATABASE "+schema);
                int status=pstmt.executeUpdate();
                if(status!=1)
                {
                    JOptionPane.showMessageDialog(null, "Schema is drop successfully ....");
                    model.removeNodeFromParent(node);
                    model.reload();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Fail to drop Schema ....");
                }
            }
            catch (Exception e)
            {               
                e.printStackTrace();
            }
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        { 
            
        }
    }//GEN-LAST:event_drop_schemaActionPerformed
    
    public void treeCreator() throws SQLException
	{
		//creation of JTree
                pstmt_schema_tree=getConn().prepareStatement("show schemas");
                ResultSet rs_schema_tree=pstmt_schema_tree.executeQuery();
                ResultSet rs_table_tree;
                ResultSet rs_field_tree;
                DefaultMutableTreeNode all=new DefaultMutableTreeNode("Database Schema");
                while(rs_schema_tree.next())
                {
                    DefaultMutableTreeNode schema=new DefaultMutableTreeNode(rs_schema_tree.getString(1));
                    System.out.println(rs_schema_tree.getString(1));
                    
                    pstmt_table_tree=getConn().prepareStatement("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND TABLE_SCHEMA=?");
	
                    pstmt_table_tree.setString(1, rs_schema_tree.getString(1));
	
                    rs_table_tree=pstmt_table_tree.executeQuery();
	
                    while(rs_table_tree.next())
	
                    {
                        DefaultMutableTreeNode table=new DefaultMutableTreeNode(rs_table_tree.getString(1));
                        System.out.println(rs_table_tree.getString(1));
                        pstmt_field_tree=getConn().prepareStatement("select * from "+rs_schema_tree.getString(1)+"."+rs_table_tree.getString(1));
                        //pstmt_field_tree.setString(1, rs_table_tree.getString(1));
                        rs_field_tree=pstmt_field_tree.executeQuery();
                        ResultSetMetaData rsmd_tree=rs_field_tree.getMetaData();
                        int count_tree=rsmd_tree.getColumnCount();
                        for(int i=1;i<=count_tree;i++)
                        {
                            //DefaultMutableTreeNode root=new DefaultMutableTreeNode("Employee");
                            DefaultMutableTreeNode field=new DefaultMutableTreeNode(rsmd_tree.getColumnName(i)+"  "+rsmd_tree.getColumnTypeName(i));
                            table.add(field);
                            //DefaultMutableTreeNode child2=new DefaultMutableTreeNode("Name");
                            //child.add(child2);
                        }
                        schema.add(table);
                    }
                    all.add(schema);
                }
                DefaultTreeModel treemod=(DefaultTreeModel) tree.getModel();
                treemod.setRoot(all);
                tree.setModel(treemod);
                //p1.setComponentPopupMenu(popup_tree);
	}
    public void treeCreator_orcl() throws SQLException
	{
		//creation of JTree                
                ResultSet rs_table_tree;
                ResultSet rs_field_tree;
                DefaultMutableTreeNode all=new DefaultMutableTreeNode("Database Schema");
                pstmt_table_tree=getConn().prepareStatement("select table_name from user_tables where tablespace_name='SYSTEM' AND table_name not like '%$%' AND table_name not like '%$' AND table_name not like '$%'  AND table_name!='HELP' AND table_name!='SQLPLUS_PRODUCT_PROFILE'");
                rs_table_tree=pstmt_table_tree.executeQuery();	
                while(rs_table_tree.next())
                {
                    DefaultMutableTreeNode table=new DefaultMutableTreeNode(rs_table_tree.getString(1));
                    System.out.println(rs_table_tree.getString(1));
                    pstmt_field_tree=getConn().prepareStatement("select * from "+rs_table_tree.getString(1));
                    //pstmt_field_tree.setString(1, rs_table_tree.getString(1));
                    rs_field_tree=pstmt_field_tree.executeQuery();
                    ResultSetMetaData rsmd_tree=rs_field_tree.getMetaData();
                    int count_tree=rsmd_tree.getColumnCount();
                    for(int i=1;i<=count_tree;i++)
                    {
                        //DefaultMutableTreeNode root=new DefaultMutableTreeNode("Employee");
                        DefaultMutableTreeNode field=new DefaultMutableTreeNode(rsmd_tree.getColumnName(i)+"  "+rsmd_tree.getColumnTypeName(i));
                        table.add(field);
                    }
                    all.add(table);
                }                
                DefaultTreeModel treemod=(DefaultTreeModel) tree.getModel();
                treemod.setRoot(all);
                tree.setModel(treemod);
                //p1.setComponentPopupMenu(popup_tree);
	}
    public void treeCreator_acc() throws SQLException
	{
            //creation of JTree                
            ResultSet rs_table_tree;
            ResultSet rs_field_tree;
            DefaultMutableTreeNode all=new DefaultMutableTreeNode("Database Schema");
            DatabaseMetaData md=getConn().getMetaData();
            rs_table_tree=md.getTables(null, null, "%", null);
            String temp="";
            while(rs_table_tree.next())
            {
                temp = rs_table_tree.getString(3);
                if(!temp.contains("MSys"))
                {
                    DefaultMutableTreeNode table=new DefaultMutableTreeNode(temp);             
                    System.out.println(temp);
                    
                    pstmt_field_tree=getConn().prepareStatement("select * from "+temp);
                    //pstmt_field_tree.setString(1, rs_table_tree.getString(1));
                    rs_field_tree=pstmt_field_tree.executeQuery();
                    ResultSetMetaData rsmd_tree=rs_field_tree.getMetaData();
                    int count_tree=rsmd_tree.getColumnCount();
                    for(int i=1;i<=count_tree;i++)
                    {
                        //DefaultMutableTreeNode root=new DefaultMutableTreeNode("Employee");
                        DefaultMutableTreeNode field=new DefaultMutableTreeNode(rsmd_tree.getColumnName(i)+"  "+rsmd_tree.getColumnTypeName(i));
                        table.add(field);
                    }
                    all.add(table);
                }                
                DefaultTreeModel treemod=(DefaultTreeModel) tree.getModel();
                treemod.setRoot(all);
                tree.setModel(treemod);
                //p1.setComponentPopupMenu(popup_tree);
            }
        }

    /**
     * @return the QueryPane
     */
    public javax.swing.JTextArea getQueryPane() {
        return QueryPane1;
    }
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QBPanel1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QBPanel1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QBPanel1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QBPanel1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QBPanel1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea QueryPane1;
    private javax.swing.JMenuItem Refresh;
    private javax.swing.JMenuItem RenameTable;
    private javax.swing.JMenuItem SubDelete2;
    private javax.swing.JMenuItem SubDelete3;
    private javax.swing.JMenuItem SubDelete4;
    private javax.swing.JMenuItem SubDelete5;
    private javax.swing.JMenuItem SubInsert1;
    private javax.swing.JMenuItem SubSelect1;
    private javax.swing.JMenuItem SubUpdate1;
    private javax.swing.JMenuItem Truncate;
    private javax.swing.JMenuItem alterBtn1;
    private javax.swing.JMenuItem create1;
    private javax.swing.JMenuItem create_schema;
    private javax.swing.JMenuItem delete1;
    private javax.swing.JButton directExecute;
    private javax.swing.JMenuItem dropTable;
    private javax.swing.JMenuItem drop_schema;
    private javax.swing.JMenuItem exitbtn;
    private javax.swing.JMenuItem insert1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSplitPane jpan1;
    private javax.swing.JMenuItem openbtn;
    private javax.swing.JButton refresh;
    private javax.swing.JMenuItem savebtn;
    private javax.swing.JMenuItem select1;
    private javax.swing.JMenuItem select10;
    private javax.swing.JMenuItem select11;
    private javax.swing.JMenuItem select12;
    private javax.swing.JMenuItem select13;
    private javax.swing.JMenuItem select14;
    private javax.swing.JMenuItem select15;
    private javax.swing.JMenuItem select16;
    private javax.swing.JMenuItem select2;
    private javax.swing.JMenuItem select3;
    private javax.swing.JMenuItem select4;
    private javax.swing.JMenuItem select5;
    private javax.swing.JMenuItem select6;
    private javax.swing.JMenuItem select7;
    private javax.swing.JMenuItem select8;
    private javax.swing.JMenuItem select9;
    private javax.swing.JTree tree;
    private javax.swing.JPanel treePane;
    private javax.swing.JMenuItem update1;
    // End of variables declaration//GEN-END:variables
}
