/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package querybuilder;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import static querybuilder.QBPanel1.getConn;
import static querybuilder.SelectQuery_w_orcl.getConn;
import static querybuilder.SelectQuery_w_orcl.setConn;

/**
 *
 * @author vikas
 */
public class RenameTableQuery extends javax.swing.JFrame {

    private static Connection conn;

    /**
     * @return the conn
     */
    public static Connection getConn() {
        return conn;
    }

    /**
     * @param aConn the conn to set
     */
    public static void setConn(Connection aConn) {
        conn = aConn;
    }

    /**
     * @return the newtablename
     */
    public static String getNewtablename() {
        return newtablename;
    }

    /**
     * @param aNewtablename the newtablename to set
     */
    public static void setNewtablename(String aNewtablename) {
        newtablename = aNewtablename;
    }
    private ResultSet rs;
    private PreparedStatement pstmt,pstmt_schema_tree,pstmt_table_tree,pstmt_field_tree;
    private static String newtablename;
    public RenameTableQuery() {
        initComponents();
        this.setLocationRelativeTo(null);
        try {
            if(StartWindow.getDatabase_string().equals("MySQL"))
            {
                setConn(QBPanel1.getConn());
                //add value to schema combobox
                pstmt=conn.prepareStatement("show schemas");
                ResultSet rs_schema=pstmt.executeQuery();
                while(rs_schema.next())
                {
                    schema.addItem(rs_schema.getString(1));                
                    System.out.println(rs_schema.getString(1));
                }                  
            }
            else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
            {
                schemalb.setVisible(false);
                schema.setVisible(false);
            }
        }
        catch (Exception e) 
        {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tablename = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        schemalb = new javax.swing.JLabel();
        schema = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("New Table Name");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        schemalb.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        schemalb.setText("Select Schema");

        schema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(schemalb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tablename, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(schema, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schemalb)
                    .addComponent(schema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tablename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(StartWindow.getDatabase_string().equals("MySQL"))
        {            
         try {
                System.out.println("RENAME TABLE "+getNewtablename().toString()+" TO "+schema.getSelectedItem().toString()+"."+tablename.getText());
                pstmt=getConn().prepareStatement("RENAME TABLE "+getNewtablename()+" TO "+schema.getSelectedItem().toString()+"."+tablename.getText());                                
                pstmt.execute();
                this.dispose();
//                if(status!=1)
//                {
//                    JOptionPane.showMessageDialog(null, "Table is rename successfully ....");                    
//                }
//                else
//                {
//                    JOptionPane.showMessageDialog(null, "Fail to rename Table ....");
//                }
            }
            catch (Exception e)
            {               
                JOptionPane.showMessageDialog(null, "Table is rename successfully ....");
                e.printStackTrace();
                this.dispose();
            }
        }
        else if(StartWindow.getDatabase_string().equals("ORACLE") || StartWindow.getDatabase_string().equals("MS-Access"))
        {            
            try {
                String query="RENAME  "+getNewtablename().toString()+" TO "+tablename.getText();
                System.out.println(query);
                pstmt=getConn().prepareStatement(query);
                pstmt.execute();
                this.dispose();
//          for MS-ACCESS
//                pstmt=getConn().prepareStatement("SELECT * INTO  "+tablename.getText()+" FROM "+getNewtablename());
//                pstmt=getConn().prepareStatement("DROP TABLE  "+getNewtablename());
                
                
//                int status=pstmt.executeUpdate();
//                if(status!=1)
//                {
//                    JOptionPane.showMessageDialog(null, "Table is rename successfully ....");                    
//                }
//                else
//                {
//                    JOptionPane.showMessageDialog(null, "Fail to rename Table ....");
//                }
            }
            catch (Exception e)
            {               
                JOptionPane.showMessageDialog(null, "Table is rename successfully ....");     
                e.printStackTrace();
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void schemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemaActionPerformed
        
    }//GEN-LAST:event_schemaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RenameTableQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RenameTableQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RenameTableQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RenameTableQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RenameTableQuery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox schema;
    private javax.swing.JLabel schemalb;
    private javax.swing.JTextField tablename;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the pstmt_schema_tree
     */
    public PreparedStatement getPstmt_schema_tree() {
        return pstmt_schema_tree;
    }

    /**
     * @param pstmt_schema_tree the pstmt_schema_tree to set
     */
    public void setPstmt_schema_tree(PreparedStatement pstmt_schema_tree) {
        this.pstmt_schema_tree = pstmt_schema_tree;
    }
}
